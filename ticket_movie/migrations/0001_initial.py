# Generated by Django 5.2.4 on 2025-07-09 18:03

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_code', models.CharField(max_length=20, unique=True)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('booking_time', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('expired', 'Expired')], default='pending', max_length=20)),
            ],
            options={
                'db_table': 'bookings',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('country', models.CharField(default='Vietnam', max_length=50)),
            ],
            options={
                'verbose_name_plural': 'cities',
                'db_table': 'cities',
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('discount_type', models.CharField(choices=[('percentage', 'Percentage'), ('fixed', 'Fixed Amount')], max_length=20)),
                ('discount_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('min_order_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('max_uses', models.IntegerField(blank=True, null=True)),
                ('current_uses', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'promotions',
            },
        ),
        migrations.CreateModel(
            name='Cinema',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.TextField()),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('opening_hours', models.CharField(blank=True, max_length=100)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticket_movie.city')),
            ],
            options={
                'db_table': 'cinemas',
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('duration', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('release_date', models.DateField()),
                ('genre', models.CharField(blank=True, max_length=100)),
                ('director', models.CharField(blank=True, max_length=100)),
                ('movie_cast', models.TextField(blank=True)),
                ('poster_url', models.URLField(blank=True, max_length=255)),
                ('trailer_url', models.URLField(blank=True, max_length=255)),
                ('rating', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('status', models.CharField(choices=[('coming', 'Coming Soon'), ('showing', 'Now Showing'), ('ended', 'Ended')], default='coming', max_length=20)),
            ],
            options={
                'db_table': 'movies',
                'indexes': [models.Index(fields=['status'], name='idx_movie_status')],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('method', models.CharField(blank=True, choices=[('cash', 'Cash'), ('credit_card', 'Credit Card'), ('momo', 'MoMo'), ('zalopay', 'ZaloPay'), ('vnpay', 'VNPay')], max_length=20, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('success', 'Success'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('payment_time', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticket_movie.booking')),
            ],
            options={
                'db_table': 'payments',
            },
        ),
        migrations.CreateModel(
            name='AppliedPromotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticket_movie.booking')),
                ('promotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticket_movie.promotion')),
            ],
            options={
                'db_table': 'applied_promotions',
            },
        ),
        migrations.CreateModel(
            name='Screen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('type', models.CharField(choices=[('2D', '2D'), ('3D', '3D'), ('IMAX', 'IMAX'), ('4DX', '4DX')], default='2D', max_length=20)),
                ('capacity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('cinema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticket_movie.cinema')),
            ],
            options={
                'db_table': 'screens',
            },
        ),
        migrations.CreateModel(
            name='Seat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row', models.CharField(max_length=1)),
                ('number', models.IntegerField()),
                ('type', models.CharField(choices=[('standard', 'Standard'), ('vip', 'VIP'), ('couple', 'Couple')], default='standard', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('screen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticket_movie.screen')),
            ],
            options={
                'db_table': 'seats',
            },
        ),
        migrations.CreateModel(
            name='BookingSeat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticket_movie.booking')),
                ('seat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticket_movie.seat')),
            ],
            options={
                'db_table': 'booking_seats',
            },
        ),
        migrations.CreateModel(
            name='Showtime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('available_seats', models.IntegerField()),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('cancelled', 'Cancelled'), ('completed', 'Completed')], default='scheduled', max_length=20)),
                ('movie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticket_movie.movie')),
                ('screen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticket_movie.screen')),
            ],
            options={
                'db_table': 'showtimes',
            },
        ),
        migrations.AddField(
            model_name='booking',
            name='showtime',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticket_movie.showtime'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('full_name', models.CharField(blank=True, max_length=100)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('role', models.CharField(choices=[('customer', 'Khách hàng'), ('staff', 'Nhân viên'), ('admin', 'Quản trị viên')], default='customer', max_length=20, verbose_name='Vai trò')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='custom_user_groups', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_permissions', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='booking',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ticket_movie.user'),
        ),
        migrations.AddIndex(
            model_name='cinema',
            index=models.Index(fields=['city'], name='idx_cinema_city'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['booking'], name='idx_payment_booking'),
        ),
        migrations.AddIndex(
            model_name='screen',
            index=models.Index(fields=['cinema'], name='idx_screen_cinema'),
        ),
        migrations.AddIndex(
            model_name='seat',
            index=models.Index(fields=['screen'], name='idx_seat_screen'),
        ),
        migrations.AddConstraint(
            model_name='seat',
            constraint=models.UniqueConstraint(fields=('screen', 'row', 'number'), name='unique_seat'),
        ),
        migrations.AddIndex(
            model_name='showtime',
            index=models.Index(fields=['movie'], name='idx_showtime_movie'),
        ),
        migrations.AddIndex(
            model_name='showtime',
            index=models.Index(fields=['screen'], name='idx_showtime_screen'),
        ),
        migrations.AddConstraint(
            model_name='showtime',
            constraint=models.CheckConstraint(condition=models.Q(('end_time__gt', models.F('start_time'))), name='valid_showtime'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['user'], name='idx_booking_user'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['showtime'], name='idx_booking_showtime'),
        ),
    ]
